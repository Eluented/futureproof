version: '3'
name: "mca-mongo"
services: # what kind of services do we want? - 3 containers client, api and db - need images for each one 
  client:
    image:  node:12.18.4
    ports: # specify port, how they can run together 
      - 8080:8080
    volumes: # connect this folder on the machine to the container - src our machine dst - to container
      - type: bind # the - is a list item you can have multiple containers?
        source: ./mca-client
        target: /code
    working_dir: /code              # tell the container what to the when it starts - move from root to /code
    command: bash -c "npm install && npm run dev"   # run a command because we arent there they do the command you want
  api:
    image:  node:12.18.4
    ports:
      - 3000:3000 # exposing ports to our computer - containers expose ports automatically 
    environment:
      - DB_CONNECTION=mongodb://doggos-admin:doggos-pass@db:27017 # using this username and password - connect to the database that is running on 27017
      - DB_NAME=doggos # name of the database 
    volumes: 
      - type: bind 
        source: ./mca-client
        target: /code
    working_dir: /code              
    command: bash -c "npm install && npm run dev" 
    depends_on:
      - db # it depends on the database
  db:
    image: mongo:latest    # specifying the image - specifying version using latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=doggos-admin # this is the username
      - MONGO_INITDB_DATABASE=doggos # this is the database
      - MONGO_INITDB_ROOT_PASSWORD=doggos-pass # this is the password
      volumes: #storage that manages it for us 
      - "dbdata:/var/lib/mongodb/data" # write things to a file - docker manages the data for you - incoming data to dbdata file 
      - "./db/seed.js:/docker-entrypoint-initdb.d/seed.js:ro" # read only - ro at the end - container not allowed to touch it 
volumes:
